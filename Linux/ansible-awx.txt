# AWX里导入hosts文件
awx-manage inventory_import --inventory-name k8s --source hosts_add
sh-4.4# cat hosts_add
[production]
10.67.49.241
10.67.49.242
10.67.49.243
10.67.49.244
10.67.49.245
10.67.49.246
[production:vars]
ansible_ssh_user='root'
ansible_ssh_pass='ext566-32081'



# AWX安裝
前提条件
1 下载AWX项目 17.1.0  可以用docker-compose安裝
 后续版本适合kubernetes
git clone -b 17.1.0 --depth 50 https://github.com/ansible/awx.git

2 安裝docker软件包和导入docker image
postgres:12
redis:latest
centos:8
ansible/awx:17.1.0

3 yum安裝的依赖包
yum -y install git gcc gcc-c++ nodejs gettext device-mapper-persistent-data lvm2 bzip2 python-pip
yum -y install libselinux-python3
yum -y install python-docker-py
yum -y install docker-compose

4 此次安裝是在localhost安裝，所以要先安裝ansible软件包

配置inventory文件
其中secret_key由以下命令生成：
   openssl rand -base64 30
[root@repo ~]# cat awx/installer/inventory |egrep -v '#|^$'
localhost ansible_connection=local ansible_python_interpreter="/usr/bin/env python3"
[all:vars]
dockerhub_base=ansible
awx_task_hostname=awx
awx_web_hostname=awxweb
postgres_data_dir="~/.awx/pgdocker"
host_port=8090
host_port_ssl=443
docker_compose_dir="~/.awx/awxcompose"
pg_username=awx
pg_password=awxpass
pg_database=awx
pg_port=5432
admin_user=admin
admin_password=Foxconn$56
create_preload_data=True
secret_key=0TXGSMb4I/HBH07apRkMCOamZq8B8g0qDcm4UGbt
awx_container_search_domains=cesbg.foxconn
awx_alternate_dns_servers="10.67.50.111"
project_data_dir=/var/lib/awx/projects

部署
cd awx/installer/
ansible-playbook -i inventory install.yml

部署完后访问 http://10.67.51.164:8090

AWX 关键工作流程
1 inventory file可以用awx-manage随时导入
2 playbook可以放在gitlab上，在AWX中创建projects时，指定gitlab 项目地址


# awx命令行   用于CI
安装awx到centos8
yum-config-manager --add-repo https://releases.ansible.com/ansible-tower/cli/ansible-tower-cli-el8.repo
yum install ansible-tower-cli -y
配置环境变量
[root@c8-cilent1 ~]# cat ansible-awx-rc
export TOWER_HOST=http://10.67.51.164:8090
export TOWER_USERNAME=admin
export TOWER_PASSWORD='Foxconn$56'
使用环境变量获得AWX的token
source ansible-awx-rc;awx login -f human | tee token; source token
运行命令
[root@c8-cilent1 ~]# awx job_template list --filter id,name,inventory,project,playbook -f human
id name              inventory project playbook
== ================= ========= ======= ===================
23 check vm          1         20      vminfo.yaml
7  Demo Job Template 1         6       hello_world.yml
19 ntp               4         17      baseconfig/site.yml
15 test 1            3         13      site.yml

awx credentials create --credential_type 'Machine' \
    --name 'My SSH Key' --user 'alice' \
    --inputs '{"username": "server-login", "ssh_key_data": "@~/.ssh/id_rsa"}'

1 创建project
[root@c8-cilent1 ~]# cat awx_project_create.sh
awx projects create --wait \
--organization 1 \
--name 'chensen' \
--scm_type git \
--scm_url 'https://gitlab.ces.efoxconn.com/H7108579/ansible' \
--scm_update_on_launch yes \
--credential 4 \
-f human
2 创建job template
[root@c8-cilent1 ~]# cat awx_job_template_create.sh
awx job_templates create \
--name 'check vm' \
--job_type run \
--project 'chensen' \
--playbook vminfo.yaml \
--inventory 'Demo Inventory' \
--ask_credential_on_launch yes \
--verbosity 2 \
-f human

3 执行job template
awx job_templates launch 'check vm' --credentials 'vcenter5189' --monitor -f human

可以转为playbook
[root@repo ansible]# cat run_job_templates.yaml
---
- hosts: localhost
  vars:
    now_date: "{{ lookup('pipe','date +%Y%m%d%H%M') }}"
  tasks:
  - name: include the playbook gitacp.yaml
    include: gitacp.yaml

  - name: add host 10.67.36.15 to operate awx
    add_host:
      name: 10.67.36.15
      groups: awxclient
      ansible_ssh_host: 10.67.36.15
      ansible_ssh_user: root
      ansible_ssh_pass: 'ext566-32081'
- hosts: awxclient
  tasks:
  - name: execute awx job_template
    shell: |
      source /root/ansible-awx-rc
      awx login -f human | tee /root/token
      source /root/token
      awx job_templates launch "{{ job }}" --credentials "{{ cred }}" --monitor -f human
[root@repo ansible]# cat gitacp.yaml
- name: git acp
  shell: |
    git add .
    git commit -m "ansible commit {{ now_date }}"
    git push
  args:
    chdir: /root/ansible
执行命令： ansible-playbook run_job_templates.yaml -e job='check_vm' -e cred='vcenter5189' -vv