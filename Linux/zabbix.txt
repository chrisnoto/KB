#######zabbix原生模板自带的方法##########
Windows block devices by zabbix agent active
wmi.getall[root\cimv2,"select * from win32_perfformatteddata_perfdisk_physicaldisk"]
可以在poweshell中用以下命令
Get-WmiObject -Query "select * from win32_perfformatteddata_perfdisk_physicaldisk"

Linux block devices by zabbix agent active
vfs.file.contents[/proc/diskstats]
zabbix优化及配置

###########zabbix优化点#########
1 客户端使用zabbix agent active模式

2  zabbix db优化innodb引擎的默认配置

innodb_buffer_pool_size = 10G           主机内存的60%-70%
innodb_buffer_pool_instances=8
innodb_flush_method=O_DIRECT           不使用文件系统缓存，避免double cache
innodb_log_file_size=512M                       根据一个小时的数据量，来评估 log file大小
innodb_buffer_pool_dump_pct=75
innodb_io_capacity=800
innodb_io_capacity_max=4000
innodb_flush_log_at_trx_commit=0
innodb_lru_scan_depth=256

character-set-server=utf8                            支持中文
collation-server=utf8_general_ci
max_connections=2048                前提：设置ulimit
wait_timeout=28800

slow_query_log=1                                       开启慢查询
slow_query_log_file = /var/log/mysql/mysql-slow.log
long_query_time = 1

3  zabbix db启用分区，例如存放28天数据。并在dashboard里关闭history和trends的housekeeping

具体做法：参考 https://www.kancloud.cn/devops-centos/centos-linux-devops/375488

#########zabbix 收集数据########
1 zabbix agent active

自定义脚本，要注意sudo权限和!requiretty，及配置zabbix用户的权限。默认是zabbix用户启动服务，不是root。 同时有些命令需要加sudo。

调试zabbix-agent,  zabbix_agentd.conf文件 启用DebugLevel=3

2 zabbix agent

3 trapper              使用脚本调用zabbix_sender发送key, value，  并设置cron

4 snmp:

dell idrac模板与配置启用idrac snmp

hp ilo较低版本，需要在主机上安装snmp及hp health, hp snmp 等

5  web scenario

1 配置apache /nginx stat模块

2 在web scenario中，需要设置http head的json格式，并填写网站用户密码

6 simple-check   例如vmware模板

########自动发现和自动注册#######
1 自动发现， zabbix agent是被动模式，添加discovery rule
2 自动注册，zabbix agent是主动模式，并添加action，关联模板

需要配置agent interfaces地址为0.0.0.0

##########low-level discovery#########
实现自动发现诸如网卡，文件系统，tomcat instance, container 硬件如fan, power-supply，

实现方式：

1 snmp   注意：lld是snmp walk,  但是item的值是snmp get

处理不好，经常找不到oid

2 low level discovery脚本，需要输出为json格式，并配置userparameter. 如：

[root@node-3 zabbix_agentd.d]# cat userparameter_diskstats.conf
UserParameter=custom.vfs.discover_disks,/usr/local/bin/lld-disks.py

UserParameter=custom.vfs.dev.read.ops[*],awk ‘{print $$1}’ /sys/class/block/$1/stat
UserParameter=custom.vfs.dev.read.merged[*],awk ‘{print $$2}’ /sys/class/block/$1/stat
UserParameter=custom.vfs.dev.read.sectors[*],awk ‘{print $$3}’ /sys/class/block/$1/stat
UserParameter=custom.vfs.dev.read.ms[*],awk ‘{print $$4}’ /sys/class/block/$1/stat
UserParameter=custom.vfs.dev.write.ops[*],awk ‘{print $$5}’ /sys/class/block/$1/stat
UserParameter=custom.vfs.dev.write.merged[*],awk ‘{print $$6}’ /sys/class/block/$1/stat
UserParameter=custom.vfs.dev.write.sectors[*],awk ‘{print $$7}’ /sys/class/block/$1/stat
UserParameter=custom.vfs.dev.write.ms[*],awk ‘{print $$8}’ /sys/class/block/$1/stat
UserParameter=custom.vfs.dev.io.active[*],awk ‘{print $$9}’ /sys/class/block/$1/stat
UserParameter=custom.vfs.dev.io.ms[*],awk ‘{print $$10}’ /sys/class/block/$1/stat
UserParameter=custom.vfs.dev.weight.io.ms[*],awk ‘{print $$11}’ /sys/class/block/$1/stat

#######使用Ansible自动部署zabbix agent#########
# ansible-playbook -i hosts site.yaml

ansible playbook的目录结构

[root@cobbler ansible-zabbix]# tree
.
├── common.yml
├── group_vars
│   ├── trusty
│   └── xenial
├── hosts
├── host_vars
├── roles
│   ├── base_inst_zbclient_linux
│   │   ├── files
│   │   │   ├── centos6.repo
│   │   │   ├── centos7.repo
│   │   │   ├── lld-disks-3.py
│   │   │   ├── lld-disks.py
│   │   │   ├── pageinout.sh
│   │   │   ├── sources.list-1404
│   │   │   ├── sources.list-1604
│   │   │   └── userparameter_diskstats.conf
│   │   ├── handlers
│   │   │   └── main.yml
│   │   ├── tasks
│   │   │   └── main.yml
│   │   └── templates
│   │   └── zabbix_agentd.conf.j2
│   └── common
│   ├── files
│   │   ├── centos6.repo
│   │   ├── centos7.repo
│   │   ├── sources.list-1404
│   │   └── sources.list-1604
│   ├── handlers
│   ├── tasks
│   │   └── main.yml
│   └── templates
├── site.yml
└── zabbix.yml

# proxy和server之间的监控数据存在huge lag。
查看zabbix-proxy和zabbix-server之间的lag
MariaDB [zbx_proxy]> select count(*) from proxy_history where id>(select nextid from ids where
    -> table_name="proxy_history");
+----------+
| count(*) |
+----------+
|   918480 |
+----------+
1 row in set (1.957 sec)

MariaDB [zbx_proxy]> select count(*) from proxy_history where id>(select nextid from ids where table_name="proxy_history");
+----------+
| count(*) |
+----------+
|   918804 |
+----------+
1 row in set (1.295 sec)

MariaDB [zbx_proxy]> select count(*) from proxy_history where id>(select nextid from ids where table_name="proxy_history");
+----------+
| count(*) |
+----------+
|   920722 |
+----------+
1 row in set (1.562 sec)
调整proxy和server端的参数，比如增大starttrapper都没有作用。最后删除lag的backlog数据
To do that, we need:
1. stop the Zabbix proxy,
systemctl stop zabbix-proxy
2. open the database,
mysql
3. Tuncate two tables — proxy history query and IDs,
truncate proxy_history;
truncate ids;
4. exit from the database and start Zabbix proxy,
systemctl start zabbix-proxy