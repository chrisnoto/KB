# 建trigger，实现跟踪用户访问日志
drop table user_log if exist;
create table user_log (
`id` bigint(20) NOT NULL AUTO_INCREMENT,
`login` varchar(190) COLLATE utf8mb4_unicode_ci NOT NULL,
`last_seen_at` datetime DEFAULT NULL,
PRIMARY KEY (`id`)
)

DELIMITER //
CREATE TRIGGER update_last_seen
AFTER UPDATE ON user
FOR EACH ROW
BEGIN
    IF NEW.last_seen_at <> OLD.last_seen_at THEN
        INSERT INTO user_log(login, last_seen_at)
        VALUES(NEW.login, NEW.last_seen_at);
    END IF;
END; //
DELIMITER ;

show triggers;
drop trigger update_last_seen;



# 列出用户登录列表
MariaDB [grafana]> select b.name as User,date(a.last_seen_at) as "login date" from user_log as a,user as b where a.login = b.login and a.login != 'admin' group by b.name,date(a.last_seen_at);
+-----------+------------+
| User      | login date |
+-----------+------------+
| 于衡      | 2023-11-18 |
| 于衡      | 2023-11-22 |
| 孫小翠    | 2023-11-16 |
| 孫連鵬    | 2023-11-16 |
| 孫連鵬    | 2023-11-17 |
| 孫連鵬    | 2023-11-18 |
| 孫連鵬    | 2023-11-20 |
| 孫連鵬    | 2023-11-21 |
| 孫連鵬    | 2023-11-24 |
| 孫連鵬    | 2023-11-27 |
| 崔振業    | 2023-11-23 |
| 崔振業    | 2023-11-24 |
| 崔振業    | 2023-11-27 |
| 張家瑋    | 2023-11-22 |
| 張家瑋    | 2023-11-24 |
  
create view view_user_log as
select b.name as User,date(a.last_seen_at) as "login_date" from user_log as a,user as b 
where a.login = b.login and a.login != 'admin' group by b.name,date(a.last_seen_at);  


show full tables in grafana where Table_Type = 'VIEW';
drop view view_user_log;