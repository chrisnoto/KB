# postgres_exporter   port 9187
[root@worker2 ~]# cat pg_exporter.sh    
docker run -d \
  --net=host \
  -e "DATA_SOURCE_URI=10.67.36.61:5432/postgres?sslmode=disable" \
  -e DATA_SOURCE_USER='postgres' \
  -e DATA_SOURCE_PASS='Foxconn123' \
  wrouesnel/postgres_exporter:latest

# nginx-prometheus-exporter     port 9113
[root@repo web]# cat nginx-exporter.sh
docker run -d \
 -p 9113:9113 \
 nginx/nginx-prometheus-exporter:latest \
 -nginx.scrape-uri=http://10.67.51.164/nginx_status
  
# mysqld_exporter    port 9104
[root@zbxdb ~]# cat exporter.sh
docker run -d \
  -p 9104:9104 \
  -e DATA_SOURCE_NAME="root:vSTJ456@(10.67.51.162:3306)/" \
  prom/mysqld-exporter:latest

# redis_exporter  port 9121      容器里无法监控127.0.0.1，需要用主机IP地址
docker run -d --name redis_exporter -p 9121:9121 oliver006/redis_exporter --redis.addr=10.67.50.225:6379 
  
# docker_exporter     port 9417
[root@rancher ~]# cat docker_exporter.sh
docker run --name docker_exporter -d \
 --restart always \
 --volume "/var/run/docker.sock":"/var/run/docker.sock" \
 --publish 9417:9417 \
 prometheusnet/docker_exporter
 
# elasticsearch_exporter        port 9114
[root@xtjcesbges01 ~]# cat es-exp.sh
docker run -d \
 -p 9114:9114 \
 --dns 10.67.50.88 \
 -v /etc/elasticsearch/certs/ca.crt:/tmp/ca.crt \
 prometheuscommunity/elasticsearch-exporter:latest \
 --es.uri=https://elastic:vSTJ456@xtjcesbges01.cesbg.foxconn:9200 \
 --es.ca=/tmp/ca.crt 
 
# mongo exporter              port 9216
[root@rancher ~]# cat mongo.yaml
# Use root/example as user/password credentials
version: '3.1'

services:

  mongo:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    volumes:
      - mongodb:/data/db
    ports:
      - 27017:27017

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_URL: mongodb://root:example@mongo:27017/
  mongo-exporter:
    image: percona/mongodb_exporter:0.34-amd64
    restart: always
    ports:
      - 9216:9216
    command:
      - '--mongodb.uri=mongodb://root:example@mongo:27017'
      - '--mongodb.collstats-colls=test.staff,test.example'
      - '--collect-all'
      - '--compatible-mode'
volumes:
  mongodb:


################## docker-compose部署
version: "3.7"
services:
  prometheus:
    container_name: prometheus
    image: prom/prometheus:latest
    user: "0"
    volumes:
      - ~/promsrv/prometheus:/etc/prometheus
      - prometheus:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.enable-lifecycle'
    ports:
      - 9090:9090

  redis:
    image: bitnami/redis:latest
    container_name: redis
    volumes:
      - redis:/bitnami/redis/data
    command: /opt/bitnami/scripts/redis/run.sh --maxmemory 1024mb
    environment:
      - ALLOW_EMPTY_PASSWORD=no
      - REDIS_PASSWORD=Foxconn123
    ports:
      - 6379:6379

  redis-exporter:
    image: oliver006/redis_exporter
    container_name: redis-exporter
    ports:
      - 9121:9121
    command:
      - '--redis.addr=redis:6379'
      - '--redis.password=Foxconn123'

  mongo:
    container_name: mongo
    image: mongo
    restart: always
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=example
    volumes:
      - mongodb:/data/db
    ports:
      - 27017:27017

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=root
      - ME_CONFIG_MONGODB_ADMINPASSWORD=example
      - ME_CONFIG_MONGODB_URL=mongodb://root:example@mongo:27017/

  mongo-exporter:
    image: percona/mongodb_exporter:0.34-amd64
    restart: always
    ports:
      - 9216:9216
      - 17001:17001
    command:
      - '--mongodb.uri=mongodb://root:example@mongo:27017'
      - '--mongodb.collstats-colls=test.staff,test.example'
      - '--collect-all'
      - '--compatible-mode'

  mysql:
    image: mysql:5.7.26
    container_name: mysqldb
    volumes:
      - mysql:/var/lib/mysql
      - ./mysql/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - 3306:3306
    healthcheck:
      test: ""
      interval: 10s
      timeout: 10s
      retries: 2
    environment:
      - 'TZ=Asia/Shanghai'
      - MYSQL_DATABASE=zabbix
      - MYSQL_USER=zabbix
      - MYSQL_PASSWORD=vSTJ456
      - MYSQL_ROOT_PASSWORD=vSTJ456
    command:
      - '--character-set-server=utf8'
      - '--collation-server=utf8_bin'

  mysql-exporter:
    restart: unless-stopped
    image: prom/mysqld-exporter:latest
    container_name: mysql-exporter
    ports:
      - 9104:9104
    environment:
      - 'DATA_SOURCE_NAME=root:vSTJ456@(mysqldb:3306)/zabbix'


  postgresql-server:
    image: 'bitnami/postgresql:latest'
    container_name: postgresdb
    volumes:
      - postgres:/bitnami/postgresql
      - ./postgres/0.0.1-bootstrap.sql:/docker-entrypoint-initdb.d/0.0.1-bootstrap.sql
    ports:
      - 5432:5432
    healthcheck:
      test: "pg_isready -U postgres && psql 'user=postgres password=Foxconn123 host=postgresdb dbname=postgres sslmode=disable' --list"
      interval: 10s
      timeout: 10s
      retries: 2
    environment:
      - POSTGRESQL_POSTGRES_PASSWORD=Foxconn123
      - POSTGRESQL_DATABASE=it
      - POSTGRESQL_USERNAME=it
      - POSTGRESQL_PASSWORD=Foxconn123

  pg-exporter:
    image: wrouesnel/postgres_exporter:latest
    container_name: pg-exporter
    restart: unless-stopped
    ports:
      - 9187:9187
    environment:
      - DATA_SOURCE_URI=postgresdb:5432/postgres?sslmode=disable
      - DATA_SOURCE_USER=postgres
      - DATA_SOURCE_PASS=Foxconn123
    depends_on:
      postgresql-server:
        condition: service_healthy

  node-exporter:
    image: prom/node-exporter:latest
    container_name: node_exporter
    restart: unless-stopped
    ports:
      - 9100:9100

  docker-exporter:
    image: prometheusnet/docker_exporter
    container_name: docker-exporter
    restart: unless-stopped
    ports:
      - 9417:9417
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

volumes:
  prometheus:
  mongodb:
  postgres:
  mysql:
  redis:
  